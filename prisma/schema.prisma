// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
    id              Int         @id                     @default(autoincrement())
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt

    firstName       String
    lastName        String
    email           String      @unique
    password        String?
    fidelityPts     Float       @default(0)
    accountType     Int         @default(1)
    phone           String?     @unique
    coordonate      String?

    ssoGoogle      Boolean     @default(false)
    ssoFacebook    Boolean     @default(false)
    ssoGitHub      Boolean     @default(false)
    lastLogin      DateTime?

    userSociety    UserHasSociete[]
    adress         UserHasAdress[]
    billing        UserHasBilling[]
}

model UserHasSociete{
    id              Int         @id                     @default(autoincrement())

    users           Users       @relation(fields: [fk_user], references: [id])
    fk_user         Int
    society         Society     @relation(fields: [fk_society], references: [id])
    fk_society      Int
}

model UserHasAdress{
    id              Int         @id                     @default(autoincrement())


    users           Users       @relation(fields: [fk_user], references: [id])
    fk_user         Int
    address         String
}

model UserHasBilling{
    id              Int         @id                     @default(autoincrement())

    users           Users       @relation(fields:[fk_user], references:[id])
    fk_user         Int
    Billing         String
}

model Society{
    id              Int         @id                     @default(autoincrement())
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt

    societeyAuth    String
    area            String?
    societyName     String
    sepa            String
    idRestaurant    String?

    societyUsers    UserHasSociete[]
}